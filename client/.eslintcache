[{"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\App.js":"3","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\reducer\\index.js":"4","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\style.js":"5","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\reducer\\posts.js":"6","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\actions\\posts.js":"7","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Posts.js":"8","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Form\\Form.js":"9","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\constants\\actionTypes.js":"10","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\api\\index.js":"11","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\style.js":"12","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Form\\style.js":"13","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Post\\Post.js":"14","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Post\\password.js":"15","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Post\\style.js":"16"},{"size":767,"mtime":1609448836898,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1609448837179,"results":"19","hashOfConfig":"18"},{"size":1445,"mtime":1609448836334,"results":"20","hashOfConfig":"18"},{"size":125,"mtime":1609448836930,"results":"21","hashOfConfig":"18"},{"size":483,"mtime":1609448837179,"results":"22","hashOfConfig":"18"},{"size":682,"mtime":1609448836945,"results":"23","hashOfConfig":"18"},{"size":1369,"mtime":1609448836412,"results":"24","hashOfConfig":"18"},{"size":797,"mtime":1609448836898,"results":"25","hashOfConfig":"18"},{"size":3834,"mtime":1609448836805,"results":"26","hashOfConfig":"18"},{"size":176,"mtime":1609448836898,"results":"27","hashOfConfig":"18"},{"size":423,"mtime":1609448836412,"results":"28","hashOfConfig":"18"},{"size":278,"mtime":1609448836898,"results":"29","hashOfConfig":"18"},{"size":1178,"mtime":1609448836805,"results":"30","hashOfConfig":"18"},{"size":3918,"mtime":1609448836883,"results":"31","hashOfConfig":"18"},{"size":41,"mtime":1609448836883,"results":"32","hashOfConfig":"18"},{"size":1748,"mtime":1609448836898,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1sd706c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\index.js",[],["70","71"],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\reportWebVitals.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\App.js",["72","73","74"],"import logo from './logo.svg';\r\nimport react,{useState,useEffect} from 'react';\r\nimport {Container,AppBar, Typography, Grid, Grow } from '@material-ui/core';\r\nimport memories from './Images/memories.png'\r\nimport Form from './components/Form/Form';\r\nimport Posts from './components/Posts/Posts';\r\nimport useStyles from './style';\r\nimport {useDispatch} from 'react-redux';\r\nimport {getPosts} from './actions/posts';\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n  const[currentId,setCurrentId]=useState(null);\r\n\r\n  useEffect(() =>{\r\n    dispatch(getPosts())\r\n  },[dispatch])\r\n\r\nreturn (\r\n    <Container maxWidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h4\" align=\"center\">Memories</Typography>\r\n        <img className={classes.image} height=\"50\" src={memories} ></img>\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid container className={classes.mainContainer} justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n            <Grid item xs={12} sm={7}>\r\n                <Posts setCurrentId={setCurrentId} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\reducer\\index.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\style.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\reducer\\posts.js",["75"],"import {CREATE,FETCH_ALL,DELETE,UPDATE,LIKE_POST} from '../constants/actionTypes';\r\nexport default (posts=[],action) =>{\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case DELETE:\r\n                return posts.filter((post)=> post._id !==action.payload);    \r\n        case UPDATE:\r\n                return posts.map((post)=>post._id === action.payload._id ? action.payload:post); \r\n        case LIKE_POST:\r\n                return posts.map((post)=>post._id === action.payload._id ? action.payload:post);    \r\n        case CREATE:\r\n            return [...posts,action.payload];\r\n        default:\r\n            return posts;\r\n    }\r\n}","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\actions\\posts.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Form\\Form.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\api\\index.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\style.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Form\\style.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Post\\Post.js",["76","77","78","79","80","81","82"],"import React,{useState} from 'react'\r\nimport useStyles from './style';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  Modal,\r\n  TextField,\r\n  Snackbar,\r\n  IconButton,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deletePost,likePost} from '../../../actions/posts';\r\nimport dotenv from 'dotenv';\r\nimport {password1} from './password';\r\nconst Post = ({ post, setCurrentId }) => {\r\n  dotenv.config();\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [open1, setOpen1] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    console.log(password);\r\n    if (password === password1) {\r\n      dispatch(deletePost(post._id));\r\n\r\n      handleClose();\r\n    } else {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">\r\n        <center>Please Enter Admin Password</center>\r\n      </h2>\r\n      <TextField\r\n        name=\"message\"\r\n        variant=\"outlined\"\r\n        label=\"Enter Password\"\r\n        type=\"password\"\r\n        style={{ marginBottom: \"1.5rem\" }}\r\n        className={classes.customInput}\r\n        fullWidth\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        className={classes.paperButton}\r\n        onClick={handleSubmit}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={post.selectedFile}\r\n        title={post.title}\r\n      />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">\r\n          {moment(post.createdAt).fromNow()}\r\n        </Typography>\r\n      </div>\r\n\r\n      <div className={classes.overlay2}>\r\n        <Button\r\n          style={{ color: \"white\" }}\r\n          size=\"small\"\r\n          onClick={() => setCurrentId(post._id)}\r\n        >\r\n          <MoreHorizIcon fontSize=\"default\" />\r\n        </Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n          {post.tags.map((tag) => `#${tag} `)}\r\n        </Typography>\r\n      </div>\r\n      <Typography className={classes.title} variant=\"h5\" gutterBottom>\r\n        {post.title}\r\n      </Typography>\r\n      <CardContent>\r\n        <Typography gutterBottom>{post.message}</Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          onClick={() => dispatch(likePost(post._id))}\r\n        >\r\n          <ThumbUpAltIcon fontSize=\"small\" style={{ paddingRight: \"5\" }} />\r\n          LIKE &nbsp;\r\n          {post.likeCount}\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={handleOpen}>\r\n          <DeleteIcon fontSize=\"small\" />\r\n          Delete\r\n        </Button>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\"\r\n        >\r\n          {body}\r\n        </Modal>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;","C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Post\\password.js",[],"C:\\Users\\admin\\Desktop\\Athavani\\client\\src\\components\\Posts\\Post\\style.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":26,"column":9,"nodeType":"94","endLine":26,"endColumn":68},{"ruleId":"95","severity":1,"message":"96","line":2,"column":1,"nodeType":"97","endLine":17,"endColumn":2},{"ruleId":"87","severity":1,"message":"98","line":12,"column":3,"nodeType":"89","messageId":"90","endLine":12,"endColumn":11},{"ruleId":"87","severity":1,"message":"99","line":13,"column":3,"nodeType":"89","messageId":"90","endLine":13,"endColumn":13},{"ruleId":"87","severity":1,"message":"100","line":14,"column":3,"nodeType":"89","messageId":"90","endLine":14,"endColumn":13},{"ruleId":"87","severity":1,"message":"101","line":21,"column":10,"nodeType":"89","messageId":"90","endLine":21,"endColumn":20},{"ruleId":"87","severity":1,"message":"102","line":29,"column":12,"nodeType":"89","messageId":"90","endLine":29,"endColumn":17},{"ruleId":"87","severity":1,"message":"103","line":38,"column":10,"nodeType":"89","messageId":"90","endLine":38,"endColumn":15},{"ruleId":"87","severity":1,"message":"104","line":38,"column":17,"nodeType":"89","messageId":"90","endLine":38,"endColumn":25},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Snackbar' is defined but never used.","'IconButton' is defined but never used.","'withStyles' is defined but never used.","'makeStyles' is defined but never used.","'Alert' is defined but never used.","'open1' is assigned a value but never used.","'setOpen1' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]